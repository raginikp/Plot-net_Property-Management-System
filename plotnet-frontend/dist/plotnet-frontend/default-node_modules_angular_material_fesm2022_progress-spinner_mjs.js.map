{"version":3,"file":"default-node_modules_angular_material_fesm2022_progress-spinner_mjs.js","mappings":"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","sources":["./node_modules/@angular/material/fesm2022/progress-spinner.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, ANIMATION_MODULE_TYPE, numberAttribute, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, Input, ViewChild, NgModule } from '@angular/core';\nimport { NgTemplateOutlet, CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner {\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /** Theme palette color of the progress spinner. */\n    get color() {\n        return this._color || this._defaultColor;\n    }\n    set color(value) {\n        this._color = value;\n    }\n    constructor(_elementRef, animationMode, defaults) {\n        this._elementRef = _elementRef;\n        this._defaultColor = 'primary';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        this.mode =\n            _elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n                ? 'indeterminate'\n                : 'determinate';\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this._defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, v || 0));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = size || 0;\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = value || 0;\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatProgressSpinner, isStandalone: true, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: [\"value\", \"value\", numberAttribute], diameter: [\"diameter\", \"diameter\", numberAttribute], strokeWidth: [\"strokeWidth\", \"strokeWidth\", numberAttribute] }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class\": \"\\\"mat-\\\" + color\", \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"], dependencies: [{ kind: \"directive\", type: NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class]': '\"mat-\" + color',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, imports: [NgTemplateOutlet], template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }], propDecorators: { color: [{\n                type: Input\n            }], _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], diameter: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }], strokeWidth: [{\n                type: Input,\n                args: [{ transform: numberAttribute }]\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatProgressSpinner, MatSpinner], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatProgressSpinner, MatSpinner],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n"],"names":["i0","InjectionToken","ANIMATION_MODULE_TYPE","numberAttribute","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Inject","Input","ViewChild","NgModule","NgTemplateOutlet","CommonModule","MatCommonModule","_c0","MatProgressSpinner_ng_template_0_Template","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵattribute","_viewBox","ɵɵadvance","ɵɵstyleProp","_strokeCircumference","_circleStrokeWidth","_circleRadius","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","providedIn","factory","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinner","color","_color","_defaultColor","value","constructor","_elementRef","animationMode","defaults","_value","_diameter","_noopAnimations","_forceAnimations","mode","nativeElement","nodeName","toLowerCase","strokeWidth","v","Math","max","min","size","_strokeWidth","viewBox","PI","_strokeDashOffset","ɵfac","MatProgressSpinner_Factory","t","ɵɵdirectiveInject","ElementRef","ɵcmp","ɵɵdefineComponent","type","selectors","viewQuery","MatProgressSpinner_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","_determinateCircle","first","hostAttrs","hostVars","hostBindings","MatProgressSpinner_HostBindings","ɵɵclassMap","ɵɵclassProp","inputs","ɵɵInputFlags","HasDecoratorInputTransform","exportAs","standalone","features","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","decls","vars","consts","template","MatProgressSpinner_Template","ɵɵtemplate","ɵɵtemplateRefExtractor","ɵɵnamespaceHTML","ɵɵelementContainer","circle_r2","ɵɵreference","ɵɵproperty","dependencies","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","OnPush","None","imports","undefined","decorators","transform","MatSpinner","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}