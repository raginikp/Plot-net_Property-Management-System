{"version":3,"file":"src_app_components_schemes_schemes_component_ts.js","mappings":"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","sources":["./src/app/components/schemes/schemes.component.ts","./node_modules/@angular/cdk/fesm2022/accordion.mjs","./node_modules/@angular/material/fesm2022/badge.mjs","./node_modules/@angular/material/fesm2022/expansion.mjs","./node_modules/@angular/material/fesm2022/grid-list.mjs"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatSnackBarModule, MatSnackBar } from '@angular/material/snack-bar';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatBadgeModule } from '@angular/material/badge';\n\nimport { PropertyService } from '../../services/property.service';\nimport { Property, Plot } from '../../models/property.model';\n\n@Component({\n  selector: 'app-schemes',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatTabsModule,\n    MatCardModule,\n    MatTableModule,\n    MatButtonModule,\n    MatIconModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatChipsModule,\n    MatSnackBarModule,\n    MatGridListModule,\n    MatExpansionModule,\n    MatBadgeModule\n  ],\n  template: `\n    <div class=\"schemes-container\">\n      <div class=\"header\">\n        <h1>Property Schemes & Plots</h1>\n        <p>Manage residential, commercial, and office properties with detailed plot information</p>\n      </div>\n\n      <mat-tab-group>\n        <!-- Properties Overview -->\n        <mat-tab label=\"Properties Overview\">\n          <div class=\"tab-content\">\n            <div class=\"section-header\">\n              <h2>All Properties</h2>\n              <button mat-raised-button color=\"primary\" (click)=\"addProperty()\">\n                <mat-icon>add</mat-icon>\n                Add Property\n              </button>\n            </div>\n\n            <div class=\"properties-grid\">\n              <mat-card *ngFor=\"let property of properties\" class=\"property-card\">\n                <mat-card-header>\n                  <mat-card-title>{{ property.name }}</mat-card-title>\n                  <mat-card-subtitle>\n                    <mat-chip [color]=\"getPropertyTypeColor(property.type)\">\n                      {{ property.type | titlecase }}\n                    </mat-chip>\n                  </mat-card-subtitle>\n                </mat-card-header>\n                \n                <mat-card-content>\n                  <div class=\"property-info\">\n                    <div class=\"info-row\">\n                      <mat-icon>location_on</mat-icon>\n                      <span>{{ property.location }}</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <mat-icon>home</mat-icon>\n                      <span>{{ property.availablePlots }}/{{ property.totalPlots }} plots available</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <mat-icon>attach_money</mat-icon>\n                      <span>₹{{ property.pricePerSqFt }}/sq ft</span>\n                    </div>\n                    <div class=\"info-row\">\n                      <mat-icon>check_circle</mat-icon>\n                      <mat-chip [color]=\"property.status === 'active' ? 'primary' : 'warn'\">\n                        {{ property.status | titlecase }}\n                      </mat-chip>\n                    </div>\n                  </div>\n\n                  <div class=\"amenities-section\">\n                    <h4>Amenities</h4>\n                    <div class=\"amenities-list\">\n                      <mat-chip *ngFor=\"let amenity of property.amenities.slice(0, 3)\">\n                        {{ amenity }}\n                      </mat-chip>\n                      <mat-chip *ngIf=\"property.amenities.length > 3\" \n                               [matBadge]=\"property.amenities.length - 3\" \n                               matBadgeColor=\"accent\">\n                        +More\n                      </mat-chip>\n                    </div>\n                  </div>\n                </mat-card-content>\n\n                <mat-card-actions>\n                  <button mat-button (click)=\"viewProperty(property)\">\n                    <mat-icon>visibility</mat-icon>\n                    View Details\n                  </button>\n                  <button mat-button (click)=\"viewPlots(property)\">\n                    <mat-icon>grid_view</mat-icon>\n                    View Plots\n                  </button>\n                  <button mat-button (click)=\"editProperty(property)\">\n                    <mat-icon>edit</mat-icon>\n                    Edit\n                  </button>\n                </mat-card-actions>\n              </mat-card>\n            </div>\n          </div>\n        </mat-tab>\n\n        <!-- Residential Properties -->\n        <mat-tab label=\"Residential\">\n          <div class=\"tab-content\">\n            <div class=\"section-header\">\n              <h2>Residential Properties</h2>\n              <div class=\"filter-section\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Filter by Status</mat-label>\n                  <mat-select [(value)]=\"residentialFilter\" (selectionChange)=\"filterResidential()\">\n                    <mat-option value=\"all\">All</mat-option>\n                    <mat-option value=\"active\">Active</mat-option>\n                    <mat-option value=\"sold-out\">Sold Out</mat-option>\n                    <mat-option value=\"upcoming\">Upcoming</mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div>\n            </div>\n\n            <div class=\"property-details-grid\">\n              <mat-expansion-panel *ngFor=\"let property of getResidentialProperties()\" class=\"property-panel\">\n                <mat-expansion-panel-header>\n                  <mat-panel-title>\n                    {{ property.name }}\n                  </mat-panel-title>\n                  <mat-panel-description>\n                    {{ property.location }} • {{ property.availablePlots }} plots available\n                  </mat-panel-description>\n                </mat-expansion-panel-header>\n\n                <div class=\"property-expanded-content\">\n                  <div class=\"property-stats\">\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">Total Plots</span>\n                      <span class=\"stat-value\">{{ property.totalPlots }}</span>\n                    </div>\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">Available</span>\n                      <span class=\"stat-value\">{{ property.availablePlots }}</span>\n                    </div>\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">Price/Sq Ft</span>\n                      <span class=\"stat-value\">₹{{ property.pricePerSqFt }}</span>\n                    </div>\n                    <div class=\"stat-item\">\n                      <span class=\"stat-label\">Occupancy</span>\n                      <span class=\"stat-value\">{{ getOccupancyRate(property) }}%</span>\n                    </div>\n                  </div>\n\n                  <div class=\"property-description\">\n                    <h4>Description</h4>\n                    <p>{{ property.description }}</p>\n                  </div>\n\n                  <div class=\"amenities-full\">\n                    <h4>All Amenities</h4>\n                    <div class=\"amenities-grid\">\n                      <mat-chip *ngFor=\"let amenity of property.amenities\">{{ amenity }}</mat-chip>\n                    </div>\n                  </div>\n\n                  <div class=\"action-buttons\">\n                    <button mat-stroked-button (click)=\"managePlots(property)\">\n                      <mat-icon>grid_view</mat-icon>\n                      Manage Plots\n                    </button>\n                    <button mat-stroked-button (click)=\"viewAnalytics(property)\">\n                      <mat-icon>analytics</mat-icon>\n                      Analytics\n                    </button>\n                    <button mat-stroked-button (click)=\"generateBrochure(property)\">\n                      <mat-icon>picture_as_pdf</mat-icon>\n                      Brochure\n                    </button>\n                  </div>\n                </div>\n              </mat-expansion-panel>\n            </div>\n          </div>\n        </mat-tab>\n\n        <!-- Commercial Properties -->\n        <mat-tab label=\"Commercial\">\n          <div class=\"tab-content\">\n            <div class=\"section-header\">\n              <h2>Commercial Properties</h2>\n              <button mat-raised-button color=\"accent\" (click)=\"addCommercialProperty()\">\n                <mat-icon>business</mat-icon>\n                Add Commercial Property\n              </button>\n            </div>\n\n            <div class=\"commercial-properties\">\n              <mat-card *ngFor=\"let property of getCommercialProperties()\" class=\"commercial-card\">\n                <mat-card-header>\n                  <mat-card-title>{{ property.name }}</mat-card-title>\n                  <mat-card-subtitle>{{ property.location }}</mat-card-subtitle>\n                </mat-card-header>\n\n                <mat-card-content>\n                  <div class=\"commercial-metrics\">\n                    <div class=\"metric-row\">\n                      <div class=\"metric\">\n                        <span class=\"metric-label\">Total Area</span>\n                        <span class=\"metric-value\">{{ getTotalArea(property) }} sq ft</span>\n                      </div>\n                      <div class=\"metric\">\n                        <span class=\"metric-label\">Available Units</span>\n                        <span class=\"metric-value\">{{ property.availablePlots }}</span>\n                      </div>\n                    </div>\n                    <div class=\"metric-row\">\n                      <div class=\"metric\">\n                        <span class=\"metric-label\">Rental Rate</span>\n                        <span class=\"metric-value\">₹{{ property.pricePerSqFt }}/sq ft</span>\n                      </div>\n                      <div class=\"metric\">\n                        <span class=\"metric-label\">Occupancy</span>\n                        <span class=\"metric-value\">{{ getOccupancyRate(property) }}%</span>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"business-amenities\">\n                    <h4>Business Amenities</h4>\n                    <div class=\"amenities-list\">\n                      <mat-chip *ngFor=\"let amenity of property.amenities\">{{ amenity }}</mat-chip>\n                    </div>\n                  </div>\n                </mat-card-content>\n\n                <mat-card-actions>\n                  <button mat-button color=\"primary\" (click)=\"viewCommercialDetails(property)\">\n                    View Details\n                  </button>\n                  <button mat-button (click)=\"manageLeases(property)\">\n                    Manage Leases\n                  </button>\n                </mat-card-actions>\n              </mat-card>\n            </div>\n          </div>\n        </mat-tab>\n\n        <!-- Office Properties -->\n        <mat-tab label=\"Office Spaces\">\n          <div class=\"tab-content\">\n            <div class=\"section-header\">\n              <h2>Office Properties</h2>\n              <button mat-raised-button color=\"warn\" (click)=\"addOfficeProperty()\">\n                <mat-icon>corporate_fare</mat-icon>\n                Add Office Property\n              </button>\n            </div>\n\n            <div class=\"office-properties\">\n              <div class=\"office-grid\">\n                <mat-card *ngFor=\"let property of getOfficeProperties()\" class=\"office-card\">\n                  <mat-card-header>\n                    <mat-card-title>{{ property.name }}</mat-card-title>\n                    <mat-card-subtitle>{{ property.location }}</mat-card-subtitle>\n                  </mat-card-header>\n\n                  <mat-card-content>\n                    <div class=\"office-features\">\n                      <div class=\"feature-item\">\n                        <mat-icon>business_center</mat-icon>\n                        <span>{{ property.totalPlots }} Office Units</span>\n                      </div>\n                      <div class=\"feature-item\">\n                        <mat-icon>wifi</mat-icon>\n                        <span>High-Speed Internet</span>\n                      </div>\n                      <div class=\"feature-item\">\n                        <mat-icon>local_parking</mat-icon>\n                        <span>Dedicated Parking</span>\n                      </div>\n                      <div class=\"feature-item\">\n                        <mat-icon>security</mat-icon>\n                        <span>24/7 Security</span>\n                      </div>\n                    </div>\n\n                    <div class=\"office-pricing\">\n                      <div class=\"pricing-info\">\n                        <span class=\"price\">₹{{ property.pricePerSqFt }}/sq ft</span>\n                        <span class=\"price-label\">Monthly Rent</span>\n                      </div>\n                    </div>\n                  </mat-card-content>\n\n                  <mat-card-actions>\n                    <button mat-button (click)=\"viewOfficeLayout(property)\">\n                      <mat-icon>floor_plan</mat-icon>\n                      Floor Plan\n                    </button>\n                    <button mat-button (click)=\"scheduleVisit(property)\">\n                      <mat-icon>event</mat-icon>\n                      Schedule Visit\n                    </button>\n                  </mat-card-actions>\n                </mat-card>\n              </div>\n            </div>\n          </div>\n        </mat-tab>\n\n        <!-- Plot Management -->\n        <mat-tab label=\"Plot Management\">\n          <div class=\"tab-content\">\n            <div class=\"section-header\">\n              <h2>Individual Plot Management</h2>\n              <div class=\"plot-filters\">\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Select Property</mat-label>\n                  <mat-select [(value)]=\"selectedPropertyId\" (selectionChange)=\"loadPlots()\">\n                    <mat-option *ngFor=\"let property of properties\" [value]=\"property.id\">\n                      {{ property.name }}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\">\n                  <mat-label>Filter by Status</mat-label>\n                  <mat-select [(value)]=\"plotStatusFilter\">\n                    <mat-option value=\"all\">All Plots</mat-option>\n                    <mat-option value=\"available\">Available</mat-option>\n                    <mat-option value=\"booked\">Booked</mat-option>\n                    <mat-option value=\"sold\">Sold</mat-option>\n                  </mat-select>\n                </mat-form-field>\n              </div>\n            </div>\n\n            <div class=\"plots-section\" *ngIf=\"selectedPropertyId\">\n              <mat-card>\n                <mat-card-header>\n                  <mat-card-title>Plot Details</mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                  <table mat-table [dataSource]=\"getFilteredPlots()\" class=\"plots-table\">\n                    <ng-container matColumnDef=\"plotNumber\">\n                      <th mat-header-cell *matHeaderCellDef>Plot Number</th>\n                      <td mat-cell *matCellDef=\"let plot\">{{ plot.plotNumber }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"area\">\n                      <th mat-header-cell *matHeaderCellDef>Area (sq ft)</th>\n                      <td mat-cell *matCellDef=\"let plot\">{{ plot.area }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"dimensions\">\n                      <th mat-header-cell *matHeaderCellDef>Dimensions</th>\n                      <td mat-cell *matCellDef=\"let plot\">{{ plot.dimensions }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"facing\">\n                      <th mat-header-cell *matHeaderCellDef>Facing</th>\n                      <td mat-cell *matCellDef=\"let plot\">{{ plot.facing | titlecase }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"price\">\n                      <th mat-header-cell *matHeaderCellDef>Price</th>\n                      <td mat-cell *matCellDef=\"let plot\">₹{{ plot.price | number:'1.0-0' }}</td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"status\">\n                      <th mat-header-cell *matHeaderCellDef>Status</th>\n                      <td mat-cell *matCellDef=\"let plot\">\n                        <mat-chip [color]=\"getPlotStatusColor(plot.status)\">\n                          {{ plot.status | titlecase }}\n                        </mat-chip>\n                      </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"corner\">\n                      <th mat-header-cell *matHeaderCellDef>Corner</th>\n                      <td mat-cell *matCellDef=\"let plot\">\n                        <mat-icon *ngIf=\"plot.corner\" color=\"primary\">check_circle</mat-icon>\n                        <mat-icon *ngIf=\"!plot.corner\" color=\"disabled\">remove_circle</mat-icon>\n                      </td>\n                    </ng-container>\n\n                    <ng-container matColumnDef=\"actions\">\n                      <th mat-header-cell *matHeaderCellDef>Actions</th>\n                      <td mat-cell *matCellDef=\"let plot\">\n                        <button mat-icon-button (click)=\"editPlot(plot)\">\n                          <mat-icon>edit</mat-icon>\n                        </button>\n                        <button mat-icon-button (click)=\"viewPlotDetails(plot)\">\n                          <mat-icon>visibility</mat-icon>\n                        </button>\n                        <button mat-icon-button *ngIf=\"plot.status === 'available'\" (click)=\"bookPlot(plot)\">\n                          <mat-icon>book_online</mat-icon>\n                        </button>\n                      </td>\n                    </ng-container>\n\n                    <tr mat-header-row *matHeaderRowDef=\"plotColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: plotColumns;\"></tr>\n                  </table>\n                </mat-card-content>\n              </mat-card>\n            </div>\n          </div>\n        </mat-tab>\n      </mat-tab-group>\n    </div>\n  `,\n  styles: [`\n    .schemes-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 20px;\n    }\n\n    .header {\n      background: linear-gradient(135deg, #FF9800 0%, #F57C00 100%);\n      color: white;\n      padding: 30px;\n      border-radius: 12px;\n      margin-bottom: 30px;\n      text-align: center;\n    }\n\n    .header h1 {\n      margin: 0 0 10px 0;\n      font-size: 2.5em;\n      font-weight: 300;\n    }\n\n    .tab-content {\n      padding: 20px 0;\n    }\n\n    .section-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 20px;\n      flex-wrap: wrap;\n      gap: 15px;\n    }\n\n    .properties-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n      gap: 20px;\n    }\n\n    .property-card {\n      height: fit-content;\n    }\n\n    .property-info {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n      margin-bottom: 15px;\n    }\n\n    .info-row {\n      display: flex;\n      align-items: center;\n      gap: 10px;\n    }\n\n    .amenities-section {\n      margin-top: 15px;\n    }\n\n    .amenities-section h4 {\n      margin: 0 0 10px 0;\n      font-size: 1em;\n      color: #666;\n    }\n\n    .amenities-list {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 5px;\n    }\n\n    .filter-section {\n      display: flex;\n      gap: 15px;\n    }\n\n    .property-panel {\n      margin-bottom: 15px;\n    }\n\n    .property-expanded-content {\n      padding: 15px 0;\n    }\n\n    .property-stats {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n      gap: 15px;\n      margin-bottom: 20px;\n    }\n\n    .stat-item {\n      text-align: center;\n      padding: 15px;\n      background: #f5f5f5;\n      border-radius: 8px;\n    }\n\n    .stat-label {\n      display: block;\n      font-size: 0.8em;\n      color: #666;\n      margin-bottom: 5px;\n    }\n\n    .stat-value {\n      display: block;\n      font-size: 1.2em;\n      font-weight: bold;\n      color: #FF9800;\n    }\n\n    .property-description {\n      margin-bottom: 20px;\n    }\n\n    .amenities-full h4 {\n      margin-bottom: 10px;\n    }\n\n    .amenities-grid {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 8px;\n    }\n\n    .action-buttons {\n      display: flex;\n      gap: 10px;\n      margin-top: 20px;\n      flex-wrap: wrap;\n    }\n\n    .commercial-properties {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\n      gap: 20px;\n    }\n\n    .commercial-card {\n      height: fit-content;\n    }\n\n    .commercial-metrics {\n      margin-bottom: 20px;\n    }\n\n    .metric-row {\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 15px;\n    }\n\n    .metric {\n      text-align: center;\n      flex: 1;\n    }\n\n    .metric-label {\n      display: block;\n      font-size: 0.8em;\n      color: #666;\n      margin-bottom: 5px;\n    }\n\n    .metric-value {\n      display: block;\n      font-size: 1.1em;\n      font-weight: bold;\n      color: #4CAF50;\n    }\n\n    .business-amenities h4 {\n      margin-bottom: 10px;\n    }\n\n    .office-grid {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n      gap: 20px;\n    }\n\n    .office-card {\n      height: fit-content;\n    }\n\n    .office-features {\n      display: flex;\n      flex-direction: column;\n      gap: 10px;\n      margin-bottom: 20px;\n    }\n\n    .feature-item {\n      display: flex;\n      align-items: center;\n      gap: 10px;\n    }\n\n    .office-pricing {\n      text-align: center;\n      padding: 15px;\n      background: #f5f5f5;\n      border-radius: 8px;\n    }\n\n    .price {\n      display: block;\n      font-size: 1.5em;\n      font-weight: bold;\n      color: #FF5722;\n    }\n\n    .price-label {\n      font-size: 0.9em;\n      color: #666;\n    }\n\n    .plot-filters {\n      display: flex;\n      gap: 15px;\n      flex-wrap: wrap;\n    }\n\n    .plots-table {\n      width: 100%;\n    }\n\n    mat-chip {\n      font-size: 0.8em;\n    }\n\n    .plot-filters mat-form-field {\n      min-width: 200px;\n    }\n  `]\n})\nexport class SchemesComponent implements OnInit {\n  properties: Property[] = [];\n  plots: Plot[] = [];\n  selectedPropertyId: number | null = null;\n  residentialFilter = 'all';\n  plotStatusFilter = 'all';\n  \n  plotColumns = ['plotNumber', 'area', 'dimensions', 'facing', 'price', 'status', 'corner', 'actions'];\n\n  constructor(\n    private propertyService: PropertyService,\n    private fb: FormBuilder,\n    private dialog: MatDialog,\n    private snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.propertyService.getProperties().subscribe(properties => {\n      this.properties = properties;\n      if (properties.length > 0) {\n        this.selectedPropertyId = properties[0].id;\n        this.loadPlots();\n      }\n    });\n  }\n\n  loadPlots() {\n    if (this.selectedPropertyId) {\n      this.propertyService.getPlotsByProperty(this.selectedPropertyId).subscribe(plots => {\n        this.plots = plots;\n      });\n    }\n  }\n\n  getPropertyTypeColor(type: string): string {\n    switch (type) {\n      case 'residential': return 'primary';\n      case 'commercial': return 'accent';\n      case 'office': return 'warn';\n      case 'industrial': return '';\n      default: return '';\n    }\n  }\n\n  getResidentialProperties(): Property[] {\n    let filtered = this.properties.filter(p => p.type === 'residential');\n    if (this.residentialFilter !== 'all') {\n      filtered = filtered.filter(p => p.status === this.residentialFilter);\n    }\n    return filtered;\n  }\n\n  getCommercialProperties(): Property[] {\n    return this.properties.filter(p => p.type === 'commercial');\n  }\n\n  getOfficeProperties(): Property[] {\n    return this.properties.filter(p => p.type === 'office');\n  }\n\n  getOccupancyRate(property: Property): number {\n    const occupiedPlots = property.totalPlots - property.availablePlots;\n    return Math.round((occupiedPlots / property.totalPlots) * 100);\n  }\n\n  getTotalArea(property: Property): number {\n    // Mock calculation - in real app, this would sum up all plot areas\n    return property.totalPlots * 1200; // Assuming average 1200 sq ft per plot\n  }\n\n  getFilteredPlots(): Plot[] {\n    if (this.plotStatusFilter === 'all') {\n      return this.plots;\n    }\n    return this.plots.filter(plot => plot.status === this.plotStatusFilter);\n  }\n\n  getPlotStatusColor(status: string): string {\n    switch (status) {\n      case 'available': return 'primary';\n      case 'booked': return 'accent';\n      case 'sold': return 'warn';\n      default: return '';\n    }\n  }\n\n  filterResidential() {\n    // Filter is applied in getResidentialProperties()\n  }\n\n  addProperty() {\n    this.snackBar.open('Add property dialog would open here', 'Close', { duration: 3000 });\n  }\n\n  addCommercialProperty() {\n    this.snackBar.open('Add commercial property dialog would open here', 'Close', { duration: 3000 });\n  }\n\n  addOfficeProperty() {\n    this.snackBar.open('Add office property dialog would open here', 'Close', { duration: 3000 });\n  }\n\n  viewProperty(property: Property) {\n    this.snackBar.open(`View details for ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  viewPlots(property: Property) {\n    this.selectedPropertyId = property.id;\n    this.loadPlots();\n    this.snackBar.open(`Viewing plots for ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  editProperty(property: Property) {\n    this.snackBar.open(`Edit ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  managePlots(property: Property) {\n    this.snackBar.open(`Manage plots for ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  viewAnalytics(property: Property) {\n    this.snackBar.open(`View analytics for ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  generateBrochure(property: Property) {\n    this.snackBar.open(`Generate brochure for ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  viewCommercialDetails(property: Property) {\n    this.snackBar.open(`View commercial details for ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  manageLeases(property: Property) {\n    this.snackBar.open(`Manage leases for ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  viewOfficeLayout(property: Property) {\n    this.snackBar.open(`View floor plan for ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  scheduleVisit(property: Property) {\n    this.snackBar.open(`Schedule visit for ${property.name}`, 'Close', { duration: 3000 });\n  }\n\n  editPlot(plot: Plot) {\n    this.snackBar.open(`Edit plot ${plot.plotNumber}`, 'Close', { duration: 3000 });\n  }\n\n  viewPlotDetails(plot: Plot) {\n    this.snackBar.open(`View details for plot ${plot.plotNumber}`, 'Close', { duration: 3000 });\n  }\n\n  bookPlot(plot: Plot) {\n    this.snackBar.open(`Book plot ${plot.plotNumber}`, 'Close', { duration: 3000 });\n  }\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/collections';\nimport { Subject, Subscription } from 'rxjs';\n\n/** Used to generate unique ID for each accordion. */\nlet nextId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId$1++}`;\n        /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n        this.multi = false;\n    }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        if (this.multi) {\n            this._openCloseAllActions.next(true);\n        }\n    }\n    /** Closes all enabled accordion items. */\n    closeAll() {\n        this._openCloseAllActions.next(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n        this._openCloseAllActions.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordion, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: CdkAccordion, isStandalone: true, selector: \"cdk-accordion, [cdkAccordion]\", inputs: { multi: [\"multi\", \"multi\", booleanAttribute] }, providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }], exportAs: [\"cdkAccordion\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion, [cdkAccordion]',\n                    exportAs: 'cdkAccordion',\n                    providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }],\n                    standalone: true,\n                }]\n        }], propDecorators: { multi: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\n/** Used to generate unique ID for each accordion item. */\nlet nextId = 0;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    /** Whether the AccordionItem is expanded. */\n    get expanded() {\n        return this._expanded;\n    }\n    set expanded(expanded) {\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId++}`;\n        this._expanded = false;\n        /** Whether the AccordionItem is disabled. */\n        this.disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener = _expansionDispatcher.listen((id, accordionId) => {\n            if (this.accordion &&\n                !this.accordion.multi &&\n                this.accordion.id === accordionId &&\n                this.id !== id) {\n                this.expanded = false;\n            }\n        });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionItem, deps: [{ token: CDK_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: CdkAccordionItem, isStandalone: true, selector: \"cdk-accordion-item, [cdkAccordionItem]\", inputs: { expanded: [\"expanded\", \"expanded\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, providers: [\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: undefined },\n        ], exportAs: [\"cdkAccordionItem\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionItem, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                    exportAs: 'cdkAccordionItem',\n                    providers: [\n                        // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                        // registering to the same accordion.\n                        { provide: CDK_ACCORDION, useValue: undefined },\n                    ],\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: CdkAccordion, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_ACCORDION]\n                }, {\n                    type: SkipSelf\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }], propDecorators: { closed: [{\n                type: Output\n            }], opened: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], expandedChange: [{\n                type: Output\n            }], expanded: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }] } });\n\nclass CdkAccordionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionModule, imports: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionModule }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: CdkAccordionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkAccordion, CdkAccordionItem],\n                    exports: [CdkAccordion, CdkAccordionItem],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_ACCORDION, CdkAccordion, CdkAccordionItem, CdkAccordionModule };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, inject, ApplicationRef, createComponent, EnvironmentInjector, ANIMATION_MODULE_TYPE, booleanAttribute, Directive, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { InteractivityChecker, A11yModule } from '@angular/cdk/a11y';\nimport { DOCUMENT } from '@angular/common';\n\nlet nextId = 0;\nconst BADGE_CONTENT_CLASS = 'mat-badge-content';\n/** Keeps track of the apps currently containing badges. */\nconst badgeApps = new Set();\n/**\n * Component used to load the structural styles of the badge.\n * @docs-private\n */\nclass _MatBadgeStyleLoader {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: _MatBadgeStyleLoader, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: _MatBadgeStyleLoader, isStandalone: true, selector: \"ng-component\", ngImport: i0, template: '', isInline: true, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color);color:var(--mat-badge-text-color);font-family:var(--mat-badge-text-font);font-weight:var(--mat-badge-text-weight);border-radius:var(--mat-badge-container-shape)}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color)}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, unset);min-height:var(--mat-badge-small-size-container-size, unset);line-height:var(--mat-badge-legacy-small-size-container-size, var(--mat-badge-small-size-container-size));padding:var(--mat-badge-small-size-container-padding);font-size:var(--mat-badge-small-size-text-size);margin:var(--mat-badge-small-size-container-offset)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, unset);min-height:var(--mat-badge-container-size, unset);line-height:var(--mat-badge-legacy-container-size, var(--mat-badge-container-size));padding:var(--mat-badge-container-padding);font-size:var(--mat-badge-text-size);margin:var(--mat-badge-container-offset)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, unset);min-height:var(--mat-badge-large-size-container-size, unset);line-height:var(--mat-badge-legacy-large-size-container-size, var(--mat-badge-large-size-container-size));padding:var(--mat-badge-large-size-container-padding);font-size:var(--mat-badge-large-size-text-size);margin:var(--mat-badge-large-size-container-offset)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset)}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: _MatBadgeStyleLoader, decorators: [{\n            type: Component,\n            args: [{ standalone: true, encapsulation: ViewEncapsulation.None, template: '', changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-badge{position:relative}.mat-badge.mat-badge{overflow:visible}.mat-badge-content{position:absolute;text-align:center;display:inline-block;transition:transform 200ms ease-in-out;transform:scale(0.6);overflow:hidden;white-space:nowrap;text-overflow:ellipsis;box-sizing:border-box;pointer-events:none;background-color:var(--mat-badge-background-color);color:var(--mat-badge-text-color);font-family:var(--mat-badge-text-font);font-weight:var(--mat-badge-text-weight);border-radius:var(--mat-badge-container-shape)}.cdk-high-contrast-active .mat-badge-content{outline:solid 1px;border-radius:0}.mat-badge-above .mat-badge-content{bottom:100%}.mat-badge-below .mat-badge-content{top:100%}.mat-badge-before .mat-badge-content{right:100%}[dir=rtl] .mat-badge-before .mat-badge-content{right:auto;left:100%}.mat-badge-after .mat-badge-content{left:100%}[dir=rtl] .mat-badge-after .mat-badge-content{left:auto;right:100%}.mat-badge-disabled .mat-badge-content{background-color:var(--mat-badge-disabled-state-background-color);color:var(--mat-badge-disabled-state-text-color)}.mat-badge-hidden .mat-badge-content{display:none}.ng-animate-disabled .mat-badge-content,.mat-badge-content._mat-animation-noopable{transition:none}.mat-badge-content.mat-badge-active{transform:none}.mat-badge-small .mat-badge-content{width:var(--mat-badge-legacy-small-size-container-size, unset);height:var(--mat-badge-legacy-small-size-container-size, unset);min-width:var(--mat-badge-small-size-container-size, unset);min-height:var(--mat-badge-small-size-container-size, unset);line-height:var(--mat-badge-legacy-small-size-container-size, var(--mat-badge-small-size-container-size));padding:var(--mat-badge-small-size-container-padding);font-size:var(--mat-badge-small-size-text-size);margin:var(--mat-badge-small-size-container-offset)}.mat-badge-small.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-small-size-container-overlap-offset)}.mat-badge-medium .mat-badge-content{width:var(--mat-badge-legacy-container-size, unset);height:var(--mat-badge-legacy-container-size, unset);min-width:var(--mat-badge-container-size, unset);min-height:var(--mat-badge-container-size, unset);line-height:var(--mat-badge-legacy-container-size, var(--mat-badge-container-size));padding:var(--mat-badge-container-padding);font-size:var(--mat-badge-text-size);margin:var(--mat-badge-container-offset)}.mat-badge-medium.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-container-overlap-offset)}.mat-badge-large .mat-badge-content{width:var(--mat-badge-legacy-large-size-container-size, unset);height:var(--mat-badge-legacy-large-size-container-size, unset);min-width:var(--mat-badge-large-size-container-size, unset);min-height:var(--mat-badge-large-size-container-size, unset);line-height:var(--mat-badge-legacy-large-size-container-size, var(--mat-badge-large-size-container-size));padding:var(--mat-badge-large-size-container-padding);font-size:var(--mat-badge-large-size-text-size);margin:var(--mat-badge-large-size-container-offset)}.mat-badge-large.mat-badge-overlap .mat-badge-content{margin:var(--mat-badge-large-size-container-overlap-offset)}\"] }]\n        }] });\n/** Directive to display a text badge. */\nclass MatBadge {\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() {\n        return this._color;\n    }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** The content for the badge */\n    get content() {\n        return this._content;\n    }\n    set content(newContent) {\n        this._updateRenderedContent(newContent);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() {\n        return this._description;\n    }\n    set description(newDescription) {\n        this._updateDescription(newDescription);\n    }\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        this._color = 'primary';\n        /** Whether the badge should overlap its contents or not */\n        this.overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        /** Whether the OnInit lifecycle hook has run yet */\n        this._isInitialized = false;\n        /** InteractivityChecker to determine if the badge host is focusable. */\n        this._interactivityChecker = inject(InteractivityChecker);\n        this._document = inject(DOCUMENT);\n        const appRef = inject(ApplicationRef);\n        if (!badgeApps.has(appRef)) {\n            badgeApps.add(appRef);\n            const componentRef = createComponent(_MatBadgeStyleLoader, {\n                environmentInjector: inject(EnvironmentInjector),\n            });\n            appRef.onDestroy(() => {\n                badgeApps.delete(appRef);\n                if (badgeApps.size === 0) {\n                    componentRef.destroy();\n                }\n            });\n        }\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n            const matIconTagName = 'mat-icon';\n            // Heads-up for developers to avoid putting matBadge on <mat-icon>\n            // as it is aria-hidden by default docs mention this at:\n            // https://material.angular.io/components/badge/overview#accessibility\n            if (nativeElement.tagName.toLowerCase() === matIconTagName &&\n                nativeElement.getAttribute('aria-hidden') === 'true') {\n                console.warn(`Detected a matBadge on an \"aria-hidden\" \"<mat-icon>\". ` +\n                    `Consider setting aria-hidden=\"false\" in order to surface the information assistive technology.` +\n                    `\\n${nativeElement.outerHTML}`);\n            }\n        }\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered. Undefined if the element\n     * hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    ngOnInit() {\n        // We may have server-side rendered badge that we need to clear.\n        // We need to do this in ngOnInit because the full content of the component\n        // on which the badge is attached won't necessarily be in the DOM until this point.\n        this._clearExistingBadges();\n        if (this.content && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n            this._updateRenderedContent(this.content);\n        }\n        this._isInitialized = true;\n    }\n    ngOnDestroy() {\n        // ViewEngine only: when creating a badge through the Renderer, Angular remembers its index.\n        // We have to destroy it ourselves, otherwise it'll be retained in memory.\n        if (this._renderer.destroyNode) {\n            this._renderer.destroyNode(this._badgeElement);\n            this._inlineBadgeDescription?.remove();\n        }\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n    }\n    /** Gets whether the badge's host element is interactive. */\n    _isHostInteractive() {\n        // Ignore visibility since it requires an expensive style caluclation.\n        return this._interactivityChecker.isFocusable(this._elementRef.nativeElement, {\n            ignoreVisibility: true,\n        });\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        // The badge is aria-hidden because we don't want it to appear in the page's navigation\n        // flow. Instead, we use the badge to describe the decorated element with aria-describedby.\n        badgeElement.setAttribute('aria-hidden', 'true');\n        badgeElement.classList.add(BADGE_CONTENT_CLASS);\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Update the text content of the badge element in the DOM, creating the element if necessary. */\n    _updateRenderedContent(newContent) {\n        const newContentNormalized = `${newContent ?? ''}`.trim();\n        // Don't create the badge element if the directive isn't initialized because we want to\n        // append the badge element to the *end* of the host element's content for backwards\n        // compatibility.\n        if (this._isInitialized && newContentNormalized && !this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        if (this._badgeElement) {\n            this._badgeElement.textContent = newContentNormalized;\n        }\n        this._content = newContentNormalized;\n    }\n    /** Updates the host element's aria description via AriaDescriber. */\n    _updateDescription(newDescription) {\n        // Always start by removing the aria-describedby; we will add a new one if necessary.\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.description);\n        // NOTE: We only check whether the host is interactive here, which happens during\n        // when then badge content changes. It is possible that the host changes\n        // interactivity status separate from one of these. However, watching the interactivity\n        // status of the host would require a `MutationObserver`, which is likely more code + overhead\n        // than it's worth; from usages inside Google, we see that the vats majority of badges either\n        // never change interactivity, or also set `matBadgeHidden` based on the same condition.\n        if (!newDescription || this._isHostInteractive()) {\n            this._removeInlineDescription();\n        }\n        this._description = newDescription;\n        // We don't add `aria-describedby` for non-interactive hosts elements because we\n        // instead insert the description inline.\n        if (this._isHostInteractive()) {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, newDescription);\n        }\n        else {\n            this._updateInlineDescription();\n        }\n    }\n    _updateInlineDescription() {\n        // Create the inline description element if it doesn't exist\n        if (!this._inlineBadgeDescription) {\n            this._inlineBadgeDescription = this._document.createElement('span');\n            this._inlineBadgeDescription.classList.add('cdk-visually-hidden');\n        }\n        this._inlineBadgeDescription.textContent = this.description;\n        this._badgeElement?.appendChild(this._inlineBadgeDescription);\n    }\n    _removeInlineDescription() {\n        this._inlineBadgeDescription?.remove();\n        this._inlineBadgeDescription = undefined;\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-badge-${this._color}`);\n        if (colorPalette) {\n            classList.add(`mat-badge-${colorPalette}`);\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges() {\n        // Only check direct children of this host element in order to avoid deleting\n        // any badges that might exist in descendant elements.\n        const badges = this._elementRef.nativeElement.querySelectorAll(`:scope > .${BADGE_CONTENT_CLASS}`);\n        for (const badgeElement of Array.from(badges)) {\n            if (badgeElement !== this._badgeElement) {\n                badgeElement.remove();\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadge, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i1.AriaDescriber }, { token: i0.Renderer2 }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatBadge, isStandalone: true, selector: \"[matBadge]\", inputs: { color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\", booleanAttribute], disabled: [\"matBadgeDisabled\", \"disabled\", booleanAttribute], position: [\"matBadgePosition\", \"position\"], content: [\"matBadge\", \"content\"], description: [\"matBadgeDescription\", \"description\"], size: [\"matBadgeSize\", \"size\"], hidden: [\"matBadgeHidden\", \"hidden\", booleanAttribute] }, host: { properties: { \"class.mat-badge-overlap\": \"overlap\", \"class.mat-badge-above\": \"isAbove()\", \"class.mat-badge-below\": \"!isAbove()\", \"class.mat-badge-before\": \"!isAfter()\", \"class.mat-badge-after\": \"isAfter()\", \"class.mat-badge-small\": \"size === \\\"small\\\"\", \"class.mat-badge-medium\": \"size === \\\"medium\\\"\", \"class.mat-badge-large\": \"size === \\\"large\\\"\", \"class.mat-badge-hidden\": \"hidden || !content\", \"class.mat-badge-disabled\": \"disabled\" }, classAttribute: \"mat-badge\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadge, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matBadge]',\n                    host: {\n                        'class': 'mat-badge',\n                        '[class.mat-badge-overlap]': 'overlap',\n                        '[class.mat-badge-above]': 'isAbove()',\n                        '[class.mat-badge-below]': '!isAbove()',\n                        '[class.mat-badge-before]': '!isAfter()',\n                        '[class.mat-badge-after]': 'isAfter()',\n                        '[class.mat-badge-small]': 'size === \"small\"',\n                        '[class.mat-badge-medium]': 'size === \"medium\"',\n                        '[class.mat-badge-large]': 'size === \"large\"',\n                        '[class.mat-badge-hidden]': 'hidden || !content',\n                        '[class.mat-badge-disabled]': 'disabled',\n                    },\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i1.AriaDescriber }, { type: i0.Renderer2 }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }], propDecorators: { color: [{\n                type: Input,\n                args: ['matBadgeColor']\n            }], overlap: [{\n                type: Input,\n                args: [{ alias: 'matBadgeOverlap', transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ alias: 'matBadgeDisabled', transform: booleanAttribute }]\n            }], position: [{\n                type: Input,\n                args: ['matBadgePosition']\n            }], content: [{\n                type: Input,\n                args: ['matBadge']\n            }], description: [{\n                type: Input,\n                args: ['matBadgeDescription']\n            }], size: [{\n                type: Input,\n                args: ['matBadgeSize']\n            }], hidden: [{\n                type: Input,\n                args: [{ alias: 'matBadgeHidden', transform: booleanAttribute }]\n            }] } });\n\nclass MatBadgeModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadgeModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader], exports: [MatBadge, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadgeModule, imports: [A11yModule, MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatBadgeModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    // Note: we _shouldn't_ have to import `_MatBadgeStyleLoader`,\n                    // but it seems to be necessary for tests.\n                    imports: [A11yModule, MatCommonModule, MatBadge, _MatBadgeStyleLoader],\n                    exports: [MatBadge, MatCommonModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, CdkPortalOutlet, PortalModule } from '@angular/cdk/portal';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, SkipSelf, Input, Output, ContentChild, ViewChild, numberAttribute, Host, Attribute, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i1 from '@angular/cdk/collections';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        // Clear the `visibility` while open, otherwise the content will be visible when placed in\n        // a parent that's `visibility: hidden`, because `visibility` doesn't apply to descendants\n        // that have a `visibility` of their own (see #27436).\n        state('expanded', style({ height: '*', visibility: '' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n};\n\n/**\n * Token used to provide a `MatExpansionPanel` to `MatExpansionPanelContent`.\n * Used to avoid circular imports between `MatExpansionPanel` and `MatExpansionPanelContent`.\n */\nconst MAT_EXPANSION_PANEL = new InjectionToken('MAT_EXPANSION_PANEL');\n\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template, _expansionPanel) {\n        this._template = _template;\n        this._expansionPanel = _expansionPanel;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelContent, deps: [{ token: i0.TemplateRef }, { token: MAT_EXPANSION_PANEL, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatExpansionPanelContent, isStandalone: true, selector: \"ng-template[matExpansionPanelContent]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelContent, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matExpansionPanelContent]',\n                    standalone: true,\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL]\n                }, {\n                    type: Optional\n                }] }] });\n\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the default\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = value;\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        this.accordion = accordion;\n        this._document = _document;\n        this._animationsDisabled = _animationMode === 'NoopAnimations';\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent && this._lazyContent._expansionPanel === this) {\n            // Render the content as soon as the panel becomes open.\n            this.opened\n                .pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1))\n                .subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n    /** Called when the expansion animation has started. */\n    _animationStarted(event) {\n        if (!isInitialAnimation(event) && !this._animationsDisabled && this._body) {\n            // Prevent the user from tabbing into the content while it's animating.\n            // TODO(crisbeto): maybe use `inert` to prevent focus from entering while closed as well\n            // instead of `visibility`? Will allow us to clean up some code but needs more testing.\n            this._body?.nativeElement.setAttribute('inert', '');\n        }\n    }\n    /** Called when the expansion animation has finished. */\n    _animationDone(event) {\n        if (!isInitialAnimation(event)) {\n            if (event.toState === 'expanded') {\n                this.afterExpand.emit();\n            }\n            else if (event.toState === 'collapsed') {\n                this.afterCollapse.emit();\n            }\n            // Re-enable tabbing once the animation is finished.\n            if (!this._animationsDisabled && this._body) {\n                this._body.nativeElement.removeAttribute('inert');\n            }\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanel, deps: [{ token: MAT_ACCORDION, optional: true, skipSelf: true }, { token: i0.ChangeDetectorRef }, { token: i1.UniqueSelectionDispatcher }, { token: i0.ViewContainerRef }, { token: DOCUMENT }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatExpansionPanel, isStandalone: true, selector: \"mat-expansion-panel\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], togglePosition: \"togglePosition\" }, outputs: { afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, host: { properties: { \"class.mat-expanded\": \"expanded\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"class.mat-expansion-panel-spacing\": \"_hasSpacing()\" }, classAttribute: \"mat-expansion-panel\" }, providers: [\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: undefined },\n            { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n        ], queries: [{ propertyName: \"_lazyContent\", first: true, predicate: MatExpansionPanelContent, descendants: true }], viewQueries: [{ propertyName: \"_body\", first: true, predicate: [\"body\"], descendants: true }], exportAs: [\"matExpansionPanel\"], usesInheritance: true, usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.start)=\\\"_animationStarted($event)\\\"\\n     (@bodyExpansion.done)=\\\"_animationDone($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color);color:var(--mat-expansion-container-text-color);border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font);font-size:var(--mat-expansion-container-text-size);font-weight:var(--mat-expansion-container-text-weight);line-height:var(--mat-expansion-container-text-line-height);letter-spacing:var(--mat-expansion-container-text-tracking)}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color)}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"], dependencies: [{ kind: \"directive\", type: CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matExpansionAnimations.bodyExpansion], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanel, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel', exportAs: 'matExpansionPanel', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matExpansionAnimations.bodyExpansion], providers: [\n                        // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                        // to the same accordion.\n                        { provide: MAT_ACCORDION, useValue: undefined },\n                        { provide: MAT_EXPANSION_PANEL, useExisting: MatExpansionPanel },\n                    ], host: {\n                        'class': 'mat-expansion-panel',\n                        '[class.mat-expanded]': 'expanded',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[class.mat-expansion-panel-spacing]': '_hasSpacing()',\n                    }, standalone: true, imports: [CdkPortalOutlet], template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.start)=\\\"_animationStarted($event)\\\"\\n     (@bodyExpansion.done)=\\\"_animationDone($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\", styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative;background:var(--mat-expansion-container-background-color);color:var(--mat-expansion-container-text-color);border-radius:var(--mat-expansion-container-shape)}.mat-expansion-panel:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:var(--mat-expansion-container-shape);border-top-left-radius:var(--mat-expansion-container-shape)}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:var(--mat-expansion-container-shape);border-bottom-left-radius:var(--mat-expansion-container-shape)}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible;font-family:var(--mat-expansion-container-text-font);font-size:var(--mat-expansion-container-text-size);font-weight:var(--mat-expansion-container-text-weight);line-height:var(--mat-expansion-container-text-line-height);letter-spacing:var(--mat-expansion-container-text-tracking)}.mat-expansion-panel-content[style*=\\\"visibility: hidden\\\"] *{visibility:hidden !important}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px;border-top-color:var(--mat-expansion-actions-divider-color)}.mat-action-row .mat-button-base,.mat-action-row .mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row .mat-button-base,[dir=rtl] .mat-action-row .mat-mdc-button-base{margin-left:0;margin-right:8px}\"] }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [MAT_ACCORDION]\n                }] }, { type: i0.ChangeDetectorRef }, { type: i1.UniqueSelectionDispatcher }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                }, {\n                    type: Optional\n                }] }], propDecorators: { hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], togglePosition: [{\n                type: Input\n            }], afterExpand: [{\n                type: Output\n            }], afterCollapse: [{\n                type: Output\n            }], _lazyContent: [{\n                type: ContentChild,\n                args: [MatExpansionPanelContent]\n            }], _body: [{\n                type: ViewChild,\n                args: ['body']\n            }] } });\n/** Checks whether an animation is the initial setup animation. */\nfunction isInitialAnimation(event) {\n    return event.fromState === 'void';\n}\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelActionRow, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatExpansionPanelActionRow, isStandalone: true, selector: \"mat-action-row\", host: { classAttribute: \"mat-action-row\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelActionRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-action-row',\n                    host: {\n                        class: 'mat-action-row',\n                    },\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode, tabIndex) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        /** Tab index of the header. */\n        this.tabIndex = 0;\n        const accordionHideToggleChange = panel.accordion\n            ? panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition'])))\n            : EMPTY;\n        this.tabIndex = parseInt(tabIndex || '') || 0;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription = merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n            return !!(changes['hideToggle'] || changes['disabled'] || changes['togglePosition']);\n        }))).subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelHeader, deps: [{ token: MatExpansionPanel, host: true }, { token: i0.ElementRef }, { token: i2.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: 'tabindex', attribute: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"17.2.0\", type: MatExpansionPanelHeader, isStandalone: true, selector: \"mat-expansion-panel-header\", inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { attributes: { \"role\": \"button\" }, listeners: { \"click\": \"_toggle()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.id\": \"panel._headerId\", \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.aria-controls\": \"_getPanelId()\", \"attr.aria-expanded\": \"_isExpanded()\", \"attr.aria-disabled\": \"panel.disabled\", \"class.mat-expanded\": \"_isExpanded()\", \"class.mat-expansion-toggle-indicator-after\": \"_getTogglePosition() === 'after'\", \"class.mat-expansion-toggle-indicator-before\": \"_getTogglePosition() === 'before'\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"style.height\": \"_getHeaderHeight()\" }, classAttribute: \"mat-expansion-panel-header mat-focus-indicator\" }, ngImport: i0, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span [@indicatorRotate]=\\\"_getExpandedState()\\\" class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font);font-size:var(--mat-expansion-header-text-size);font-weight:var(--mat-expansion-header-text-weight);line-height:var(--mat-expansion-header-text-line-height);letter-spacing:var(--mat-expansion-header-text-tracking)}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color)}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color)}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color);display:inline-block;display:var(--mat-expansion-legacy-header-indicator-display, inline-block)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color);display:none;display:var(--mat-expansion-header-indicator-display, none)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"], animations: [matExpansionAnimations.indicatorRotate], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelHeader, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-expansion-panel-header', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, animations: [matExpansionAnimations.indicatorRotate], host: {\n                        'class': 'mat-expansion-panel-header mat-focus-indicator',\n                        'role': 'button',\n                        '[attr.id]': 'panel._headerId',\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.aria-controls]': '_getPanelId()',\n                        '[attr.aria-expanded]': '_isExpanded()',\n                        '[attr.aria-disabled]': 'panel.disabled',\n                        '[class.mat-expanded]': '_isExpanded()',\n                        '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                        '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[style.height]': '_getHeaderHeight()',\n                        '(click)': '_toggle()',\n                        '(keydown)': '_keydown($event)',\n                    }, standalone: true, template: \"<span class=\\\"mat-content\\\" [class.mat-content-hide-toggle]=\\\"!_showToggle()\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n\\n@if (_showToggle()) {\\n  <span [@indicatorRotate]=\\\"_getExpandedState()\\\" class=\\\"mat-expansion-indicator\\\">\\n    <svg\\n      xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n      viewBox=\\\"0 -960 960 960\\\"\\n      aria-hidden=\\\"true\\\"\\n      focusable=\\\"false\\\">\\n      <path d=\\\"M480-345 240-585l56-56 184 184 184-184 56 56-240 240Z\\\"/>\\n    </svg>\\n  </span>\\n}\\n\", styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1);height:var(--mat-expansion-header-collapsed-state-height);font-family:var(--mat-expansion-header-text-font);font-size:var(--mat-expansion-header-text-size);font-weight:var(--mat-expansion-header-text-weight);line-height:var(--mat-expansion-header-text-line-height);letter-spacing:var(--mat-expansion-header-text-tracking)}.mat-expansion-panel-header.mat-expanded{height:var(--mat-expansion-header-expanded-state-height)}.mat-expansion-panel-header[aria-disabled=true]{color:var(--mat-expansion-header-disabled-state-text-color)}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-header-hover-state-layer-color)}@media(hover: none){.mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:not([aria-disabled=true]):hover{background:var(--mat-expansion-container-background-color)}}.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-keyboard-focused,.mat-expansion-panel .mat-expansion-panel-header:not([aria-disabled=true]).cdk-program-focused{background:var(--mat-expansion-header-focus-state-layer-color)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-content.mat-content-hide-toggle{margin-right:8px}[dir=rtl] .mat-content.mat-content-hide-toggle{margin-right:0;margin-left:8px}.mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-left:24px;margin-right:0}[dir=rtl] .mat-expansion-toggle-indicator-before .mat-content.mat-content-hide-toggle{margin-right:24px;margin-left:0}.mat-expansion-panel-header-title{color:var(--mat-expansion-header-text-color)}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;flex-basis:0;margin-right:16px;align-items:center}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description{color:inherit}.mat-expansion-panel-header-description{flex-grow:2;color:var(--mat-expansion-header-description-color)}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle;color:var(--mat-expansion-header-indicator-color);display:inline-block;display:var(--mat-expansion-legacy-header-indicator-display, inline-block)}.mat-expansion-indicator svg{width:24px;height:24px;margin:0 -8px;vertical-align:middle;fill:var(--mat-expansion-header-indicator-color);display:none;display:var(--mat-expansion-header-indicator-display, none)}.cdk-high-contrast-active .mat-expansion-panel-content{border-top:1px solid;border-top-left-radius:0;border-top-right-radius:0}\"] }]\n        }], ctorParameters: () => [{ type: MatExpansionPanel, decorators: [{\n                    type: Host\n                }] }, { type: i0.ElementRef }, { type: i2.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n                }, {\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }], propDecorators: { expandedHeight: [{\n                type: Input\n            }], collapsedHeight: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }] } });\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelDescription, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatExpansionPanelDescription, isStandalone: true, selector: \"mat-panel-description\", host: { classAttribute: \"mat-expansion-panel-header-description\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelDescription, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-description',\n                    host: {\n                        class: 'mat-expansion-panel-header-description',\n                    },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelTitle, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatExpansionPanelTitle, isStandalone: true, selector: \"mat-panel-title\", host: { classAttribute: \"mat-expansion-panel-header-title\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionPanelTitle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-panel-title',\n                    host: {\n                        class: 'mat-expansion-panel-header-title',\n                    },\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        /** Whether the expansion indicator should be hidden. */\n        this.hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._keyManager?.destroy();\n        this._ownHeaders.destroy();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatAccordion, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.2.0\", type: MatAccordion, isStandalone: true, selector: \"mat-accordion\", inputs: { hideToggle: [\"hideToggle\", \"hideToggle\", booleanAttribute], displayMode: \"displayMode\", togglePosition: \"togglePosition\" }, host: { properties: { \"class.mat-accordion-multi\": \"this.multi\" }, classAttribute: \"mat-accordion\" }, providers: [\n            {\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion,\n            },\n        ], queries: [{ propertyName: \"_headers\", predicate: MatExpansionPanelHeader, descendants: true }], exportAs: [\"matAccordion\"], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatAccordion, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-accordion',\n                    exportAs: 'matAccordion',\n                    providers: [\n                        {\n                            provide: MAT_ACCORDION,\n                            useExisting: MatAccordion,\n                        },\n                    ],\n                    host: {\n                        class: 'mat-accordion',\n                        // Class binding which is only used by the test harness as there is no other\n                        // way for the harness to detect if multiple panel support is enabled.\n                        '[class.mat-accordion-multi]': 'this.multi',\n                    },\n                    standalone: true,\n                }]\n        }], propDecorators: { _headers: [{\n                type: ContentChildren,\n                args: [MatExpansionPanelHeader, { descendants: true }]\n            }], hideToggle: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], displayMode: [{\n                type: Input\n            }], togglePosition: [{\n                type: Input\n            }] } });\n\nclass MatExpansionModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule,\n            MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent], exports: [MatAccordion,\n            MatExpansionPanel,\n            MatExpansionPanelActionRow,\n            MatExpansionPanelHeader,\n            MatExpansionPanelTitle,\n            MatExpansionPanelDescription,\n            MatExpansionPanelContent] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionModule, imports: [MatCommonModule,\n            CdkAccordionModule,\n            PortalModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatExpansionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatCommonModule,\n                        CdkAccordionModule,\n                        PortalModule,\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                    exports: [\n                        MatAccordion,\n                        MatExpansionPanel,\n                        MatExpansionPanelActionRow,\n                        MatExpansionPanelHeader,\n                        MatExpansionPanelTitle,\n                        MatExpansionPanelDescription,\n                        MatExpansionPanelContent,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { setLines, MatLine, MatLineModule, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/bidi';\n\n/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nclass TileCoordinator {\n    constructor() {\n        /** Index at which the search for the next gap will start. */\n        this.columnIndex = 0;\n        /** The current row index. */\n        this.rowIndex = 0;\n    }\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() {\n        return this.rowIndex + 1;\n    }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while (gapEndIndex - gapStartIndex < tileCols || gapEndIndex == 0);\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\n\nclass MatGridTile {\n    constructor(_element, _gridList) {\n        this._element = _element;\n        this._gridList = _gridList;\n        this._rowspan = 1;\n        this._colspan = 1;\n    }\n    /** Amount of rows that the grid tile takes up. */\n    get rowspan() {\n        return this._rowspan;\n    }\n    set rowspan(value) {\n        this._rowspan = Math.round(coerceNumberProperty(value));\n    }\n    /** Amount of columns that the grid tile takes up. */\n    get colspan() {\n        return this._colspan;\n    }\n    set colspan(value) {\n        this._colspan = Math.round(coerceNumberProperty(value));\n    }\n    /**\n     * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n     * \"Changed after checked\" errors that would occur with HostBinding.\n     */\n    _setStyle(property, value) {\n        this._element.nativeElement.style[property] = value;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridTile, deps: [{ token: i0.ElementRef }, { token: MAT_GRID_LIST, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatGridTile, isStandalone: true, selector: \"mat-grid-tile\", inputs: { rowspan: \"rowspan\", colspan: \"colspan\" }, host: { properties: { \"attr.rowspan\": \"rowspan\", \"attr.colspan\": \"colspan\" }, classAttribute: \"mat-grid-tile\" }, exportAs: [\"matGridTile\"], ngImport: i0, template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size)}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size)}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size)}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size)}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridTile, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-tile', exportAs: 'matGridTile', host: {\n                        'class': 'mat-grid-tile',\n                        // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n                        // the DOM. This is needed for the grid-tile harness.\n                        '[attr.rowspan]': 'rowspan',\n                        '[attr.colspan]': 'colspan',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, standalone: true, template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size)}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size)}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size)}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size)}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [MAT_GRID_LIST]\n                }] }], propDecorators: { rowspan: [{\n                type: Input\n            }], colspan: [{\n                type: Input\n            }] } });\nclass MatGridTileText {\n    constructor(_element) {\n        this._element = _element;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridTileText, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatGridTileText, isStandalone: true, selector: \"mat-grid-tile-header, mat-grid-tile-footer\", queries: [{ propertyName: \"_lines\", predicate: MatLine, descendants: true }], ngImport: i0, template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\", changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridTileText, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-tile-header, mat-grid-tile-footer', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\" }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }], propDecorators: { _lines: [{\n                type: ContentChildren,\n                args: [MatLine, { descendants: true }]\n            }] } });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridAvatarCssMatStyler {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridAvatarCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatGridAvatarCssMatStyler, isStandalone: true, selector: \"[mat-grid-avatar], [matGridAvatar]\", host: { classAttribute: \"mat-grid-avatar\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridAvatarCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-grid-avatar], [matGridAvatar]',\n                    host: { 'class': 'mat-grid-avatar' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridTileHeaderCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatGridTileHeaderCssMatStyler, isStandalone: true, selector: \"mat-grid-tile-header\", host: { classAttribute: \"mat-grid-tile-header\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridTileHeaderCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-grid-tile-header',\n                    host: { 'class': 'mat-grid-tile-header' },\n                    standalone: true,\n                }]\n        }] });\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridTileFooterCssMatStyler, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatGridTileFooterCssMatStyler, isStandalone: true, selector: \"mat-grid-tile-footer\", host: { classAttribute: \"mat-grid-tile-footer\" }, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridTileFooterCssMatStyler, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-grid-tile-footer',\n                    host: { 'class': 'mat-grid-tile-footer' },\n                    standalone: true,\n                }]\n        }] });\n\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n    constructor() {\n        this._rows = 0;\n        this._rowspan = 0;\n    }\n    /**\n     * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n     * because these properties haven't been calculated by that point.\n     *\n     * @param gutterSize Size of the grid's gutter.\n     * @param tracker Instance of the TileCoordinator.\n     * @param cols Amount of columns in the grid.\n     * @param direction Layout direction of the grid.\n     */\n    init(gutterSize, tracker, cols, direction) {\n        this._gutterSize = normalizeUnits(gutterSize);\n        this._rows = tracker.rowCount;\n        this._rowspan = tracker.rowspan;\n        this._cols = cols;\n        this._direction = direction;\n    }\n    /**\n     * Computes the amount of space a single 1x1 tile would take up (width or height).\n     * Used as a basis for other calculations.\n     * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n     * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n     * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n     */\n    getBaseTileSize(sizePercent, gutterFraction) {\n        // Take the base size percent (as would be if evenly dividing the size between cells),\n        // and then subtracting the size of one gutter. However, since there are no gutters on the\n        // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n        // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n        // edge evenly among the cells).\n        return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n    }\n    /**\n     * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n     * @param offset Number of tiles that have already been rendered in the row/column.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @return Position of the tile as a CSS calc() expression.\n     */\n    getTilePosition(baseSize, offset) {\n        // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n        // row/column (offset).\n        return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n    }\n    /**\n     * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n     * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n     * @param span The tile's rowspan or colspan.\n     * @return Size of the tile as a CSS calc() expression.\n     */\n    getTileSize(baseSize, span) {\n        return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n    }\n    /**\n     * Sets the style properties to be applied to a tile for the given row and column index.\n     * @param tile Tile to which to apply the styling.\n     * @param rowIndex Index of the tile's row.\n     * @param colIndex Index of the tile's column.\n     */\n    setStyle(tile, rowIndex, colIndex) {\n        // Percent of the available horizontal space that one column takes up.\n        let percentWidthPerTile = 100 / this._cols;\n        // Fraction of the vertical gutter size that each column takes up.\n        // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n        let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n        this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n        this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    }\n    /** Sets the horizontal placement of the tile in the list. */\n    setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n        // Base horizontal size of a column.\n        let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n        // The width and horizontal position of each tile is always calculated the same way, but the\n        // height and vertical position depends on the rowMode.\n        let side = this._direction === 'rtl' ? 'right' : 'left';\n        tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n        tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n    }\n    /**\n     * Calculates the total size taken up by gutters across one axis of a list.\n     */\n    getGutterSpan() {\n        return `${this._gutterSize} * (${this._rowspan} - 1)`;\n    }\n    /**\n     * Calculates the total size taken up by tiles across one axis of a list.\n     * @param tileHeight Height of the tile.\n     */\n    getTileSpan(tileHeight) {\n        return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n    }\n    /**\n     * Calculates the computed height and returns the correct style property to set.\n     * This method can be implemented by each type of TileStyler.\n     * @docs-private\n     */\n    getComputedHeight() {\n        return null;\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n    constructor(fixedRowHeight) {\n        super();\n        this.fixedRowHeight = fixedRowHeight;\n    }\n    init(gutterSize, tracker, cols, direction) {\n        super.init(gutterSize, tracker, cols, direction);\n        this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n        if (!cssCalcAllowedValue.test(this.fixedRowHeight) &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n        }\n    }\n    setRowStyles(tile, rowIndex) {\n        tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return ['height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)];\n    }\n    reset(list) {\n        list._setListStyle(['height', null]);\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n    constructor(value) {\n        super();\n        this._parseRatio(value);\n    }\n    setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n        let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n        this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n        // Use padding-top and margin-top to maintain the given aspect ratio, as\n        // a percentage-based value for these properties is applied versus the *width* of the\n        // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n        tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n        tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n    }\n    getComputedHeight() {\n        return [\n            'paddingBottom',\n            calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`),\n        ];\n    }\n    reset(list) {\n        list._setListStyle(['paddingBottom', null]);\n        list._tiles.forEach(tile => {\n            tile._setStyle('marginTop', null);\n            tile._setStyle('paddingTop', null);\n        });\n    }\n    _parseRatio(value) {\n        const ratioParts = value.split(':');\n        if (ratioParts.length !== 2 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n        }\n        this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n    }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n    setRowStyles(tile, rowIndex) {\n        // Percent of the available vertical space that one row takes up.\n        let percentHeightPerTile = 100 / this._rowspan;\n        // Fraction of the horizontal gutter size that each column takes up.\n        let gutterHeightPerTile = (this._rows - 1) / this._rows;\n        // Base vertical size of a column.\n        let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n        tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n        tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n    }\n    reset(list) {\n        if (list._tiles) {\n            list._tiles.forEach(tile => {\n                tile._setStyle('top', null);\n                tile._setStyle('height', null);\n            });\n        }\n    }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n    return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n    return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n    constructor(_element, _dir) {\n        this._element = _element;\n        this._dir = _dir;\n        /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n        this._gutter = '1px';\n    }\n    /** Amount of columns in the grid list. */\n    get cols() {\n        return this._cols;\n    }\n    set cols(value) {\n        this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n    }\n    /** Size of the grid list's gutter in pixels. */\n    get gutterSize() {\n        return this._gutter;\n    }\n    set gutterSize(value) {\n        this._gutter = `${value == null ? '' : value}`;\n    }\n    /** Set internal representation of row height from the user-provided value. */\n    get rowHeight() {\n        return this._rowHeight;\n    }\n    set rowHeight(value) {\n        const newValue = `${value == null ? '' : value}`;\n        if (newValue !== this._rowHeight) {\n            this._rowHeight = newValue;\n            this._setTileStyler(this._rowHeight);\n        }\n    }\n    ngOnInit() {\n        this._checkCols();\n        this._checkRowHeight();\n    }\n    /**\n     * The layout calculation is fairly cheap if nothing changes, so there's little cost\n     * to run it frequently.\n     */\n    ngAfterContentChecked() {\n        this._layoutTiles();\n    }\n    /** Throw a friendly error if cols property is missing */\n    _checkCols() {\n        if (!this.cols && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: must pass in number of columns. ` + `Example: <mat-grid-list cols=\"3\">`);\n        }\n    }\n    /** Default to equal width:height if rowHeight property is missing */\n    _checkRowHeight() {\n        if (!this._rowHeight) {\n            this._setTileStyler('1:1');\n        }\n    }\n    /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n    _setTileStyler(rowHeight) {\n        if (this._tileStyler) {\n            this._tileStyler.reset(this);\n        }\n        if (rowHeight === MAT_FIT_MODE) {\n            this._tileStyler = new FitTileStyler();\n        }\n        else if (rowHeight && rowHeight.indexOf(':') > -1) {\n            this._tileStyler = new RatioTileStyler(rowHeight);\n        }\n        else {\n            this._tileStyler = new FixedTileStyler(rowHeight);\n        }\n    }\n    /** Computes and applies the size and position for all children grid tiles. */\n    _layoutTiles() {\n        if (!this._tileCoordinator) {\n            this._tileCoordinator = new TileCoordinator();\n        }\n        const tracker = this._tileCoordinator;\n        const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._tileCoordinator.update(this.cols, tiles);\n        this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n        tiles.forEach((tile, index) => {\n            const pos = tracker.positions[index];\n            this._tileStyler.setStyle(tile, pos.row, pos.col);\n        });\n        this._setListStyle(this._tileStyler.getComputedHeight());\n    }\n    /** Sets style on the main grid-list element, given the style name and value. */\n    _setListStyle(style) {\n        if (style) {\n            this._element.nativeElement.style[style[0]] = style[1];\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridList, deps: [{ token: i0.ElementRef }, { token: i1.Directionality, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.2.0\", type: MatGridList, isStandalone: true, selector: \"mat-grid-list\", inputs: { cols: \"cols\", gutterSize: \"gutterSize\", rowHeight: \"rowHeight\" }, host: { properties: { \"attr.cols\": \"cols\" }, classAttribute: \"mat-grid-list\" }, providers: [\n            {\n                provide: MAT_GRID_LIST,\n                useExisting: MatGridList,\n            },\n        ], queries: [{ propertyName: \"_tiles\", predicate: MatGridTile, descendants: true }], exportAs: [\"matGridList\"], ngImport: i0, template: \"<div>\\n  <ng-content></ng-content>\\n</div>\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size)}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size)}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size)}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size)}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridList, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-grid-list', exportAs: 'matGridList', host: {\n                        'class': 'mat-grid-list',\n                        // Ensures that the \"cols\" input value is reflected in the DOM. This is\n                        // needed for the grid-list harness.\n                        '[attr.cols]': 'cols',\n                    }, providers: [\n                        {\n                            provide: MAT_GRID_LIST,\n                            useExisting: MatGridList,\n                        },\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, standalone: true, template: \"<div>\\n  <ng-content></ng-content>\\n</div>\", styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size)}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size)}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size)}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size)}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { _tiles: [{\n                type: ContentChildren,\n                args: [MatGridTile, { descendants: true }]\n            }], cols: [{\n                type: Input\n            }], gutterSize: [{\n                type: Input\n            }], rowHeight: [{\n                type: Input\n            }] } });\n\nclass MatGridListModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridListModule, imports: [MatLineModule,\n            MatCommonModule,\n            MatGridList,\n            MatGridTile,\n            MatGridTileText,\n            MatGridTileHeaderCssMatStyler,\n            MatGridTileFooterCssMatStyler,\n            MatGridAvatarCssMatStyler], exports: [MatGridList,\n            MatGridTile,\n            MatGridTileText,\n            MatLineModule,\n            MatCommonModule,\n            MatGridTileHeaderCssMatStyler,\n            MatGridTileFooterCssMatStyler,\n            MatGridAvatarCssMatStyler] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridListModule, imports: [MatLineModule,\n            MatCommonModule, MatLineModule,\n            MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.2.0\", ngImport: i0, type: MatGridListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        MatLineModule,\n                        MatCommonModule,\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler,\n                    ],\n                    exports: [\n                        MatGridList,\n                        MatGridTile,\n                        MatGridTileText,\n                        MatLineModule,\n                        MatCommonModule,\n                        MatGridTileHeaderCssMatStyler,\n                        MatGridTileFooterCssMatStyler,\n                        MatGridAvatarCssMatStyler,\n                    ],\n                }]\n        }] });\n\n// Privately exported for the grid-list harness.\nconst ɵTileCoordinator = TileCoordinator;\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, ɵTileCoordinator };\n"],"names":["CommonModule","FormsModule","ReactiveFormsModule","MatTabsModule","MatCardModule","MatTableModule","MatButtonModule","MatIconModule","MatDialogModule","MatFormFieldModule","MatInputModule","MatSelectModule","MatChipsModule","MatSnackBarModule","MatGridListModule","MatExpansionModule","MatBadgeModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","amenity_r2","ɵɵproperty","property_r3","amenities","length","ɵɵtemplate","SchemesComponent_mat_card_17_mat_chip_35_Template","SchemesComponent_mat_card_17_mat_chip_36_Template","ɵɵlistener","SchemesComponent_mat_card_17_Template_button_click_38_listener","ɵɵrestoreView","_r1","$implicit","ctx_r3","ɵɵnextContext","ɵɵresetView","viewProperty","SchemesComponent_mat_card_17_Template_button_click_42_listener","viewPlots","SchemesComponent_mat_card_17_Template_button_click_46_listener","editProperty","ɵɵtextInterpolate","name","getPropertyTypeColor","type","ɵɵpipeBind1","location","ɵɵtextInterpolate2","availablePlots","totalPlots","pricePerSqFt","status","slice","amenity_r6","SchemesComponent_mat_expansion_panel_37_mat_chip_37_Template","SchemesComponent_mat_expansion_panel_37_Template_button_click_39_listener","property_r7","_r5","managePlots","SchemesComponent_mat_expansion_panel_37_Template_button_click_43_listener","viewAnalytics","SchemesComponent_mat_expansion_panel_37_Template_button_click_47_listener","generateBrochure","getOccupancyRate","description","amenity_r9","SchemesComponent_mat_card_48_mat_chip_34_Template","SchemesComponent_mat_card_48_Template_button_click_36_listener","property_r10","_r8","viewCommercialDetails","SchemesComponent_mat_card_48_Template_button_click_38_listener","manageLeases","getTotalArea","SchemesComponent_mat_card_60_Template_button_click_35_listener","property_r12","_r11","viewOfficeLayout","SchemesComponent_mat_card_60_Template_button_click_39_listener","scheduleVisit","property_r13","id","plot_r14","plotNumber","plot_r15","area","plot_r16","dimensions","plot_r17","facing","ɵɵpipeBind2","plot_r18","price","getPlotStatusColor","plot_r19","SchemesComponent_div_84_td_27_mat_icon_1_Template","SchemesComponent_div_84_td_27_mat_icon_2_Template","plot_r20","corner","SchemesComponent_div_84_td_30_button_7_Template_button_click_0_listener","_r23","plot_r22","bookPlot","SchemesComponent_div_84_td_30_Template_button_click_1_listener","_r21","editPlot","SchemesComponent_div_84_td_30_Template_button_click_4_listener","viewPlotDetails","SchemesComponent_div_84_td_30_button_7_Template","ɵɵelement","ɵɵelementContainerStart","SchemesComponent_div_84_th_8_Template","SchemesComponent_div_84_td_9_Template","SchemesComponent_div_84_th_11_Template","SchemesComponent_div_84_td_12_Template","SchemesComponent_div_84_th_14_Template","SchemesComponent_div_84_td_15_Template","SchemesComponent_div_84_th_17_Template","SchemesComponent_div_84_td_18_Template","SchemesComponent_div_84_th_20_Template","SchemesComponent_div_84_td_21_Template","SchemesComponent_div_84_th_23_Template","SchemesComponent_div_84_td_24_Template","SchemesComponent_div_84_th_26_Template","SchemesComponent_div_84_td_27_Template","SchemesComponent_div_84_th_29_Template","SchemesComponent_div_84_td_30_Template","SchemesComponent_div_84_tr_31_Template","SchemesComponent_div_84_tr_32_Template","getFilteredPlots","plotColumns","SchemesComponent","constructor","propertyService","fb","dialog","snackBar","properties","plots","selectedPropertyId","residentialFilter","plotStatusFilter","ngOnInit","loadData","getProperties","subscribe","loadPlots","getPlotsByProperty","getResidentialProperties","filtered","filter","p","getCommercialProperties","getOfficeProperties","property","occupiedPlots","Math","round","plot","filterResidential","addProperty","open","duration","addCommercialProperty","addOfficeProperty","ɵɵdirectiveInject","i1","PropertyService","i2","FormBuilder","i3","MatDialog","i4","MatSnackBar","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","SchemesComponent_Template","rf","ctx","SchemesComponent_Template_button_click_12_listener","SchemesComponent_mat_card_17_Template","ɵɵtwoWayListener","SchemesComponent_Template_mat_select_valueChange_27_listener","$event","ɵɵtwoWayBindingSet","SchemesComponent_Template_mat_select_selectionChange_27_listener","SchemesComponent_mat_expansion_panel_37_Template","SchemesComponent_Template_button_click_43_listener","SchemesComponent_mat_card_48_Template","SchemesComponent_Template_button_click_54_listener","SchemesComponent_mat_card_60_Template","SchemesComponent_Template_mat_select_valueChange_70_listener","SchemesComponent_Template_mat_select_selectionChange_70_listener","SchemesComponent_mat_option_71_Template","SchemesComponent_Template_mat_select_valueChange_75_listener","SchemesComponent_div_84_Template","ɵɵtwoWayProperty","i5","NgForOf","NgIf","DecimalPipe","TitleCasePipe","i6","MatTab","MatTabGroup","i7","MatCard","MatCardActions","MatCardContent","MatCardHeader","MatCardSubtitle","MatCardTitle","i8","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","i9","MatButton","MatIconButton","i10","MatIcon","i11","MatFormField","MatLabel","i12","MatSelect","i13","MatOption","i14","MatChip","i15","MatExpansionPanel","MatExpansionPanelHeader","MatExpansionPanelTitle","MatExpansionPanelDescription","i16","MatBadge","styles","InjectionToken","booleanAttribute","Directive","Input","EventEmitter","Optional","Inject","SkipSelf","Output","NgModule","Subject","Subscription","nextId$1","CDK_ACCORDION","CdkAccordion","_stateChanges","_openCloseAllActions","multi","openAll","next","closeAll","ngOnChanges","changes","ngOnDestroy","complete","ɵfac","CdkAccordion_Factory","t","ɵdir","ɵɵdefineDirective","inputs","ɵɵInputFlags","HasDecoratorInputTransform","exportAs","ɵɵProvidersFeature","provide","useExisting","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ngDevMode","ɵsetClassMetadata","args","selector","providers","transform","nextId","CdkAccordionItem","expanded","_expanded","expandedChange","emit","opened","accordionId","accordion","_expansionDispatcher","notify","closed","_changeDetectorRef","markForCheck","_openCloseAllSubscription","EMPTY","destroyed","disabled","_removeUniqueSelectionListener","listen","_subscribeToOpenCloseAllActions","unsubscribe","toggle","close","CdkAccordionItem_Factory","ChangeDetectorRef","UniqueSelectionDispatcher","outputs","useValue","undefined","decorators","CdkAccordionModule","CdkAccordionModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","Component","ViewEncapsulation","ChangeDetectionStrategy","inject","ApplicationRef","createComponent","EnvironmentInjector","ANIMATION_MODULE_TYPE","MatCommonModule","InteractivityChecker","A11yModule","DOCUMENT","BADGE_CONTENT_CLASS","badgeApps","Set","_MatBadgeStyleLoader","_MatBadgeStyleLoader_Factory","ɵcmp","ɵɵdefineComponent","_MatBadgeStyleLoader_Template","encapsulation","changeDetection","None","OnPush","color","_color","value","_setColor","content","_content","newContent","_updateRenderedContent","_description","newDescription","_updateDescription","_ngZone","_elementRef","_ariaDescriber","_renderer","_animationMode","overlap","position","size","_id","_isInitialized","_interactivityChecker","_document","appRef","has","add","componentRef","environmentInjector","onDestroy","delete","destroy","nativeElement","nodeType","ELEMENT_NODE","Error","matIconTagName","tagName","toLowerCase","getAttribute","console","warn","outerHTML","isAbove","indexOf","isAfter","getBadgeElement","_badgeElement","_clearExistingBadges","_createBadgeElement","destroyNode","_inlineBadgeDescription","remove","removeDescription","_isHostInteractive","isFocusable","ignoreVisibility","badgeElement","createElement","activeClass","setAttribute","classList","appendChild","requestAnimationFrame","runOutsideAngular","newContentNormalized","trim","textContent","_removeInlineDescription","describe","_updateInlineDescription","colorPalette","badges","querySelectorAll","Array","from","MatBadge_Factory","NgZone","ElementRef","AriaDescriber","Renderer2","hostAttrs","hostVars","hostBindings","MatBadge_HostBindings","ɵɵclassProp","hidden","host","alias","MatBadgeModule_Factory","TemplatePortal","CdkPortalOutlet","PortalModule","ContentChild","ViewChild","numberAttribute","Host","Attribute","QueryList","ContentChildren","FocusKeyManager","startWith","take","ENTER","hasModifierKey","SPACE","merge","trigger","state","style","transition","animate","_c0","_c1","_c2","MatExpansionPanel_ng_template_5_Template","_c3","_c4","MatExpansionPanelHeader_Conditional_4_Template","ɵɵnamespaceSVG","ctx_r0","_getExpandedState","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","bodyExpansion","height","visibility","MAT_EXPANSION_PANEL","MatExpansionPanelContent","_template","_expansionPanel","MatExpansionPanelContent_Factory","TemplateRef","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","hideToggle","_hideToggle","togglePosition","_togglePosition","_uniqueSelectionDispatcher","_viewContainerRef","defaultOptions","afterExpand","afterCollapse","_inputChanges","_headerId","_animationsDisabled","_hasSpacing","displayMode","ngAfterContentInit","_lazyContent","pipe","_portal","_containsFocus","_body","focusedElement","activeElement","bodyElement","contains","_animationStarted","event","isInitialAnimation","_animationDone","toState","removeAttribute","MatExpansionPanel_Factory","ViewContainerRef","contentQueries","MatExpansionPanel_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatExpansionPanel_Query","ɵɵviewQuery","MatExpansionPanel_HostBindings","ɵɵInheritDefinitionFeature","ngContentSelectors","MatExpansionPanel_Template","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵprojection","MatExpansionPanel_Template_div_animation_bodyExpansion_start_1_listener","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","ɵɵattribute","dependencies","data","animation","animations","fromState","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","class","panel","_element","_focusMonitor","tabIndex","_parentChangeSubscription","accordionHideToggleChange","parseInt","focusVia","expandedHeight","collapsedHeight","_toggle","_isExpanded","_getPanelId","_getTogglePosition","_showToggle","_getHeaderHeight","isExpanded","_keydown","keyCode","preventDefault","_handleHeaderKeydown","focus","origin","options","ngAfterViewInit","monitor","_handleHeaderFocus","stopMonitoring","MatExpansionPanelHeader_Factory","FocusMonitor","ɵɵinjectAttribute","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","ɵɵstyleProp","MatExpansionPanelHeader_Template","ɵɵconditional","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle_Factory","MatAccordion","arguments","_ownHeaders","_headers","headers","reset","header","notifyOnChanges","_keyManager","withWrap","withHomeAndEnd","onKeydown","updateActiveItem","ɵMatAccordion_BaseFactory","MatAccordion_Factory","ɵɵgetInheritedFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","descendants","MatExpansionModule_Factory","setLines","MatLine","MatLineModule","coerceNumberProperty","TileCoordinator","columnIndex","rowIndex","rowCount","rowspan","lastRowMax","max","tracker","update","numColumns","tiles","fill","positions","map","tile","_trackTile","gapStartIndex","_findMatchingGap","colspan","_markTilePosition","TilePosition","tileCols","gapEndIndex","_nextRow","_findGapEndIndex","i","start","row","col","MAT_GRID_LIST","MatGridTile","_gridList","_rowspan","_colspan","_setStyle","MatGridTile_Factory","MatGridTile_HostBindings","MatGridTile_Template","MatGridTileText","_lines","MatGridTileText_Factory","MatGridTileText_ContentQueries","MatGridTileText_Template","MatGridAvatarCssMatStyler","MatGridAvatarCssMatStyler_Factory","MatGridTileHeaderCssMatStyler","MatGridTileHeaderCssMatStyler_Factory","MatGridTileFooterCssMatStyler","MatGridTileFooterCssMatStyler_Factory","cssCalcAllowedValue","TileStyler","_rows","init","gutterSize","cols","direction","_gutterSize","normalizeUnits","_cols","_direction","getBaseTileSize","sizePercent","gutterFraction","getTilePosition","baseSize","offset","calc","getTileSize","span","setStyle","colIndex","percentWidthPerTile","gutterWidthFractionPerTile","setColStyles","setRowStyles","percentWidth","gutterWidth","baseTileWidth","side","getGutterSpan","getTileSpan","tileHeight","getComputedHeight","FixedTileStyler","fixedRowHeight","test","list","_setListStyle","_tiles","forEach","RatioTileStyler","_parseRatio","percentHeightPerTile","rowHeightRatio","baseTileHeight","ratioParts","split","parseFloat","FitTileStyler","gutterHeightPerTile","exp","match","MAT_FIT_MODE","MatGridList","_dir","_gutter","rowHeight","_rowHeight","newValue","_setTileStyler","_checkCols","_checkRowHeight","ngAfterContentChecked","_layoutTiles","_tileStyler","_tileCoordinator","index","pos","MatGridList_Factory","Directionality","MatGridList_ContentQueries","MatGridList_HostBindings","MatGridList_Template","MatGridListModule_Factory","ɵTileCoordinator"],"sourceRoot":"webpack:///","x_google_ignoreList":[1,2,3,4]}